apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: longhorn
    meta.helm.sh/release-namespace: longhorn-system
  labels:
    app: longhorn-ui
    app.kubernetes.io/instance: longhorn
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: longhorn
    app.kubernetes.io/version: v1.5.1
    helm.sh/chart: longhorn-1.5.1
  name: longhorn-ui
  namespace: longhorn-system
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: longhorn-ui
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: longhorn-ui
        app.kubernetes.io/instance: longhorn
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: longhorn
        app.kubernetes.io/version: v1.5.1
        helm.sh/chart: longhorn-1.5.1
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - longhorn-ui
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - env:
        - name: LONGHORN_MANAGER_IP
          value: http://longhorn-backend:9500
        - name: LONGHORN_UI_PORT
          value: "8000"
        image: longhornio/longhorn-ui:v1.5.1
        imagePullPolicy: IfNotPresent
        name: longhorn-ui
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        resources: {}
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/cache/nginx/
          name: nginx-cache
        - mountPath: /var/config/nginx/
          name: nginx-config
        - mountPath: /var/run/
          name: var-run
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      volumes:
      - emptyDir: {}
        name: nginx-cache
      - emptyDir: {}
        name: nginx-config
      - emptyDir: {}
        name: var-run
status:
  availableReplicas: 2
  conditions:
  - lastTransitionTime: "2025-04-22T05:48:48Z"
    lastUpdateTime: "2025-04-22T05:49:02Z"
    message: ReplicaSet "longhorn-ui-b56cb4fd6" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  - lastTransitionTime: "2025-04-28T05:57:37Z"
    lastUpdateTime: "2025-04-28T05:57:37Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 1
  readyReplicas: 2
  replicas: 2
  updatedReplicas: 2
