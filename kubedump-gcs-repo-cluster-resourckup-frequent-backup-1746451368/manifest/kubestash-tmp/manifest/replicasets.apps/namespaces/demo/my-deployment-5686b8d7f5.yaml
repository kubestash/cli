apiVersion: apps/v1
kind: ReplicaSet
metadata:
  annotations: {}
  labels:
    app: my-app
    pod-template-hash: 5686b8d7f5
  name: my-deployment-5686b8d7f5
  namespace: demo
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: Deployment
    name: my-deployment
    uid: 475b2009-7fab-494b-b8c8-88360624e1ed
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-app
      pod-template-hash: 5686b8d7f5
  template:
    metadata:
      labels:
        app: my-app
        pod-template-hash: 5686b8d7f5
    spec:
      containers:
      - image: nginx:latest
        imagePullPolicy: Always
        name: my-container
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
        - mountPath: /etc/secret
          name: secret-volume
        - mountPath: /data
          name: storage-volume
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: my-serviceaccount
      serviceAccountName: my-serviceaccount
      volumes:
      - configMap:
          defaultMode: 420
          name: my-config
        name: config-volume
      - name: secret-volume
        secret:
          defaultMode: 420
          secretName: my-secret
      - name: storage-volume
        persistentVolumeClaim:
          claimName: my-pvc
status:
  fullyLabeledReplicas: 1
  observedGeneration: 1
  replicas: 1
