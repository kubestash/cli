apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2025-05-05T13:22:49Z"
  finalizers:
  - batch.kubernetes.io/job-tracking
  generateName: demo-cluster-resources-backup-frequent-backup-1746451368-
  labels:
    app.kubernetes.io/component: kubestash-backup
    app.kubernetes.io/managed-by: kubestash.com
    batch.kubernetes.io/controller-uid: 0a440905-94ce-48f5-8dbd-b64da0d59098
    batch.kubernetes.io/job-name: demo-cluster-resources-backup-frequent-backup-1746451368
    controller-uid: 0a440905-94ce-48f5-8dbd-b64da0d59098
    job-name: demo-cluster-resources-backup-frequent-backup-1746451368
    kubestash.com/invoker-name: cluster-resources-backup-frequent-backup-1746451368
    kubestash.com/invoker-namespace: demo
    kubestash.com/session-name: frequent-backup
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:finalizers:
          .: {}
          v:"batch.kubernetes.io/job-tracking": {}
        f:generateName: {}
        f:labels:
          .: {}
          f:app.kubernetes.io/component: {}
          f:app.kubernetes.io/managed-by: {}
          f:batch.kubernetes.io/controller-uid: {}
          f:batch.kubernetes.io/job-name: {}
          f:controller-uid: {}
          f:job-name: {}
          f:kubestash.com/invoker-name: {}
          f:kubestash.com/invoker-namespace: {}
          f:kubestash.com/session-name: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"0a440905-94ce-48f5-8dbd-b64da0d59098"}: {}
      f:spec:
        f:containers:
          k:{"name":"manifest-backup-0"}:
            .: {}
            f:args: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/kubestash-tmp"}:
                .: {}
                f:mountPath: {}
                f:name: {}
        f:dnsPolicy: {}
        f:enableServiceLinks: {}
        f:restartPolicy: {}
        f:schedulerName: {}
        f:securityContext:
          .: {}
          f:runAsUser: {}
        f:serviceAccount: {}
        f:serviceAccountName: {}
        f:terminationGracePeriodSeconds: {}
        f:volumes:
          .: {}
          k:{"name":"kubestash-tmp-volume"}:
            .: {}
            f:emptyDir: {}
            f:name: {}
    manager: k3s
    operation: Update
    time: "2025-05-05T13:22:49Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          k:{"type":"ContainersReady"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Initialized"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"PodReadyToStartContainers"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Ready"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
        f:containerStatuses: {}
        f:hostIP: {}
        f:hostIPs: {}
        f:phase: {}
        f:podIP: {}
        f:podIPs:
          .: {}
          k:{"ip":"10.42.0.152"}:
            .: {}
            f:ip: {}
        f:startTime: {}
    manager: k3s
    operation: Update
    subresource: status
    time: "2025-05-05T13:22:50Z"
  name: demo-cluster-resources-backup-frequent-backup-1746451368-xk7lv
  namespace: demo
  ownerReferences:
  - apiVersion: batch/v1
    blockOwnerDeletion: true
    controller: true
    kind: Job
    name: demo-cluster-resources-backup-frequent-backup-1746451368
    uid: 0a440905-94ce-48f5-8dbd-b64da0d59098
  resourceVersion: "1714592"
  uid: 75adbb5b-497b-408a-a3e8-496ccb61c0c8
spec:
  containers:
  - args:
    - backup
    - --namespace=demo
    - --backupsession=cluster-resources-backup-frequent-backup-1746451368
    - --enable-cache=true
    - --scratch-dir=/kubestash-tmp
    - --sanitize=true
    - --and-label-selectors=
    - --or-label-selectors=
    - --include-cluster-resources=true
    - --include-namespaces=
    - --include-resources=
    - --exclude-resources=
    - --exclude-namespaces=
    image: arnabbaishnab7620/kubedump:kubedump-restore_linux_amd64415
    imagePullPolicy: IfNotPresent
    name: manifest-backup-0
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /kubestash-tmp
      name: kubestash-tmp-volume
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-p6d7f
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: nipun
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Never
  schedulerName: default-scheduler
  securityContext:
    runAsUser: 65534
  serviceAccount: cluster-resource-reader-writter
  serviceAccountName: cluster-resource-reader-writter
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - emptyDir: {}
    name: kubestash-tmp-volume
  - name: kube-api-access-p6d7f
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2025-05-05T13:22:50Z"
    status: "True"
    type: PodReadyToStartContainers
  - lastProbeTime: null
    lastTransitionTime: "2025-05-05T13:22:49Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2025-05-05T13:22:50Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2025-05-05T13:22:50Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2025-05-05T13:22:49Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: containerd://3a49fb8408993cd38e587a719822cc780d8df372d6ae379afa0d0166eb76c845
    image: docker.io/arnabbaishnab7620/kubedump:kubedump-restore_linux_amd64415
    imageID: docker.io/arnabbaishnab7620/kubedump@sha256:8511df3c9c4eb1c42f0f79af60c4cbf2964737fc3dbe17c2da9d814eed306d41
    lastState: {}
    name: manifest-backup-0
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2025-05-05T13:22:49Z"
    volumeMounts:
    - mountPath: /kubestash-tmp
      name: kubestash-tmp-volume
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-p6d7f
      readOnly: true
      recursiveReadOnly: Disabled
  hostIP: 10.2.0.141
  hostIPs:
  - ip: 10.2.0.141
  phase: Running
  podIP: 10.42.0.152
  podIPs:
  - ip: 10.42.0.152
  qosClass: BestEffort
  startTime: "2025-05-05T13:22:49Z"
