apiVersion: batch/v1
kind: CronJob
metadata:
  name: trigger-cluster-resources-backup-frequent-backup
  namespace: demo
  ownerReferences:
  - apiVersion: core.kubestash.com/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: BackupConfiguration
    name: cluster-resources-backup
    uid: c25b6c2c-6fe0-417e-8b44-f5c46dfc1277
spec:
  concurrencyPolicy: Allow
  failedJobsHistoryLimit: 1
  jobTemplate:
    metadata:
      creationTimestamp: null
    spec:
      template:
        metadata:
          creationTimestamp: null
          labels:
            app.kubernetes.io/managed-by: kubestash.com
        spec:
          containers:
          - args:
            - trigger-backup
            - --invoker-name=cluster-resources-backup
            - --invoker-kind=BackupConfiguration
            - --session-name=frequent-backup
            image: ghcr.io/kubestash/kubestash:v0.17.0
            imagePullPolicy: IfNotPresent
            name: trigger
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: trigger-cluster-resources-backup-frequent-backup
          serviceAccountName: trigger-cluster-resources-backup-frequent-backup
          terminationGracePeriodSeconds: 30
  schedule: '*/5 * * * *'
  successfulJobsHistoryLimit: 3
  suspend: false
status: {}
