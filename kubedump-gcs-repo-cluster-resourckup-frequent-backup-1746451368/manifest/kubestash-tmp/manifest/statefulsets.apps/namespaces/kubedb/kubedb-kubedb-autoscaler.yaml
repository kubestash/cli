apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    meta.helm.sh/release-name: kubedb
    meta.helm.sh/release-namespace: kubedb
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubedb-autoscaler
    app.kubernetes.io/version: v0.38.0
    helm.sh/chart: kubedb-autoscaler-v0.38.0
  name: kubedb-kubedb-autoscaler
  namespace: kubedb
spec:
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
  podManagementPolicy: Parallel
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubedb
      app.kubernetes.io/name: kubedb-autoscaler
  serviceName: kubedb-kubedb-autoscaler-headless
  template:
    metadata:
      annotations:
        reload: EEloCEFq
      labels:
        app.kubernetes.io/instance: kubedb
        app.kubernetes.io/name: kubedb-autoscaler
    spec:
      containers:
      - args:
        - operator
        - --v=5
        - --use-kubeapiserver-fqdn-for-aks=true
        - --metrics-bind-address=:8080
        - --health-probe-bind-address=:8081
        - --update-interval=1m
        - --prometheus-address=http://prometheus-operated.monitoring.svc:9090
        - --memory-aggregation-interval=4m0s
        - --memory-aggregation-interval-count=3
        - --memory-histogram-decay-half-life=5m0s
        - --cpu-histogram-decay-half-life=5m0s
        - --license-file=/var/run/secrets/appscode/license/key.txt
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: ghcr.io/kubedb/kubedb-autoscaler:v0.38.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: probes
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 1
        name: operator
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        - containerPort: 8081
          name: probes
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: probes
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /tmp
          name: tmpdir
        - mountPath: /var/run/secrets/appscode/license
          name: license
      initContainers:
      - command:
        - /bin/sh
        - -c
        - kubectl wait --for=create -n kubedb service -l 'app.kubernetes.io/name=kubedb-webhook-server'
          --timeout=5m && kubectl wait --for=condition=kubedb.com/conversion=true
          -n kubedb pods -l 'app.kubernetes.io/instance=kubedb,app.kubernetes.io/name=kubedb-webhook-server'
          --timeout=5m
        image: ghcr.io/appscode/kubectl-nonroot:1.31
        imagePullPolicy: IfNotPresent
        name: wait
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: File
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: kubedb-kubedb-autoscaler
      serviceAccountName: kubedb-kubedb-autoscaler
      volumes:
      - emptyDir: {}
        name: tmpdir
      - name: license
        secret:
          defaultMode: 420
          secretName: kubedb-kubedb-autoscaler-license
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
status:
  availableReplicas: 1
  collisionCount: 0
  currentReplicas: 1
  currentRevision: kubedb-kubedb-autoscaler-84c8bddcfd
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updateRevision: kubedb-kubedb-autoscaler-84c8bddcfd
  updatedReplicas: 1
