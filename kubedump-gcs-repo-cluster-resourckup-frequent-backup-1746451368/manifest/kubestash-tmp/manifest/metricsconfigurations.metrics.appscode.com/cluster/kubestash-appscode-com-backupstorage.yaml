apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  annotations:
    meta.helm.sh/release-name: kubestash
    meta.helm.sh/release-namespace: stash
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubestash-appscode-com-backupstorage
spec:
  commonLabels:
  - key: invoker_kind
    value: BackupStorage
  - key: invoker_name
    valuePath: .metadata.name
  metrics:
  - field:
      path: .metadata.creationTimestamp
      type: DateTime
    help: Unix creation timestamp of this BackupStorage object
    metricValue:
      valueFromPath: .metadata.creationTimestamp
    name: created
    type: gauge
  - help: General information about this BackupStorage
    labels:
    - key: provider
      valuePath: .spec.storage.provider
    - key: default
      valuePath: .spec.default
    - key: deletionPolicy
      valuePath: .spec.deletionPolicy
    - key: phase
      valuePath: .status.phase
    metricValue:
      value: 1
    name: info
    type: gauge
  - field:
      path: .status.repositories
      type: Array
    help: Total backed up data in the repository of this BackupStorage
    labels:
    - key: repo_name
      valuePath: .status.repositories[*].name
    - key: repo_namespace
      valuePath: .status.repositories[*].namespace
    - key: repo_path
      valuePath: .status.repositories[*].path
    metricValue:
      valueFromExpression: bytes(size)
    name: repository_size_bytes
    params:
    - key: size
      valuePath: .status.repositories[*].size
    type: gauge
  - field:
      path: .status.phase
      type: String
    help: BackupStorage object current phase
    name: phase
    params:
    - key: phase
      valuePath: .status.phase
    states:
      labelKey: phase
      values:
      - labelValue: Ready
        metricValue:
          valueFromExpression: int(phase == 'Ready')
      - labelValue: NotReady
        metricValue:
          valueFromExpression: int(phase == 'NotReady')
    type: gauge
  - field:
      path: .status.totalSize
      type: String
    help: Total backed up data size in this BackupStorage
    metricValue:
      valueFromExpression: bytes(size)
    name: size_bytes
    params:
    - key: size
      valuePath: .status.totalSize
    type: gauge
  - field:
      path: .status.conditions
      type: Array
    help: Current conditions of this BackupStorage
    labels:
    - key: condition
      valuePath: .status.conditions[*].type
    - key: status
      valuePath: .status.conditions[*].status
    metricValue:
      value: 1
    name: conditions
    type: gauge
  targetRef:
    apiVersion: storage.kubestash.com/v1alpha1
    kind: BackupStorage
